<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="Loader.Views.DatabaseView" Bind.AtDesignTime="True" LocalizeDictionary.DesignCulture="en" ResxLocalizationProvider.DefaultAssembly="Loader" ResxLocalizationProvider.DefaultDictionary="Translation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:viewModels="clr-namespace:Loader.ViewModels" xmlns:cal="http://www.caliburnproject.org" xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" xmlns:p="clr-namespace:Loader.Properties" xmlns:lex="http://wpflocalizeextension.codeplex.com">
  <Grid>
    <Grid Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
      <ProgressRing FrameworkElement.Width="100" FrameworkElement.Height="100" />
    </Grid>
    <Grid Visibility="{Binding IsLoading, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
      <ComboBox DisplayMemberPath="Name" Margin="10,10,0,0" HorizontalAlignment="Left" Width="200" Height="28" VerticalAlignment="Top" ItemsSource="{Binding Profiles}" SelectedItem="{Binding SelectedProfile}" Text="{Binding SelectedProfile.Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
      <Button x:ConnectionId="1" Name="Install" Style="{DynamicResource AccentedSquareButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="226,10,0,0" Padding="5,6" Content="{Loc Database.Button.Install}" />
      <TextBox Height="23" Width="181" Margin="0,10,10,0" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Right" TextBoxHelper.Watermark="{Loc Database.Watermark.Search}" Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
      <StackPanel Margin="0,10,200,0" Orientation="Horizontal" Height="25" VerticalAlignment="Top" HorizontalAlignment="Right" Width="250">
        <CheckBox Height="25" Margin="0,0,10,0" Content="{Loc Database.Checkbox.Champion}" IsChecked="{Binding ChampionCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <CheckBox Height="25" Margin="0,0,10,0" Content="{Loc Database.Checkbox.Utility}" IsChecked="{Binding UtilityCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <CheckBox Height="25" Margin="0,0,10,0" Content="{Loc Database.Checkbox.Library}" IsChecked="{Binding LibraryCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
      </StackPanel>
      <DataGrid x:ConnectionId="2" Name="Items" Message.Attach="[Event MouseDoubleClick] = [Action InstallSelected()]" Margin="10,47,10,10" BorderThickness="1" SelectionMode="Extended" AllowDrop="True" CanUserAddRows="False" AutoGenerateColumns="False">
        <DataGrid.ContextMenu>
          <ContextMenu>
            <MenuItem Message.Attach="[Event Click] = [Action OpenGithub()]" Header="{Loc Database.Context.OpenGithub}">
              <MenuItem.Icon>
                <Rectangle Width="16" Height="16">
                  <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource appbar_github}" />
                  </Rectangle.Fill>
                </Rectangle>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Message.Attach="[Event Click] = [Action OpenForum()]" Header="{Loc Database.Context.OpenForum}">
              <MenuItem.Icon>
                <Rectangle Width="16" Height="20">
                  <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource appbar_page_text}" />
                  </Rectangle.Fill>
                </Rectangle>
              </MenuItem.Icon>
            </MenuItem>
          </ContextMenu>
        </DataGrid.ContextMenu>
        <DataGrid.Columns>
          <DataGridCheckBoxColumn EditingElementStyle="{DynamicResource MetroDataGridCheckBox}" ElementStyle="{DynamicResource MetroDataGridCheckBox}" Width="40" Binding="{Binding InstallChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <DataGridCheckBoxColumn.HeaderTemplate>
              <DataTemplate>
                <CheckBox Message.Attach="[Event Checked] = [Action CheckAll()]; [Event Unchecked] = [Action UncheckAll()]" />
              </DataTemplate>
            </DataGridCheckBoxColumn.HeaderTemplate>
            <DataGridCheckBoxColumn.CellStyle>
              <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding HasBuildError}" Value="True">
                    <Setter Property="Control.Background" Value="{Binding ErrorColor, Converter={StaticResource ColorToBrushConverter}}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </DataGridCheckBoxColumn.CellStyle>
          </DataGridCheckBoxColumn>
          <DataGridTextColumn Width="180" Binding="{Binding Assembly.Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{Loc Database.Column.Name}" />
          <DataGridTextColumn Width="80" IsReadOnly="True" Binding="{Binding Assembly.Type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumTranslationConverter}}" Header="{Loc Database.Column.Type}" />
          <DataGridTextColumn IsReadOnly="True" Binding="{Binding Assembly.AuthorName}" Header="{Loc Database.Column.Author}">
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextBlock.Foreground" Value="{Binding Assembly.AuthorColor}" />
                <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn Width="60" IsReadOnly="True" Binding="{Binding Assembly.Votes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{Loc Database.Column.Votes}">
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn Width="*" Binding="{Binding Assembly.Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{Loc Database.Column.Description}" />
        </DataGrid.Columns>
      </DataGrid>
    </Grid>
  </Grid>
</UserControl>