<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="Loader.Views.ProfilesView" Bind.AtDesignTime="True" LocalizeDictionary.DesignCulture="en" ResxLocalizationProvider.DefaultAssembly="Loader" ResxLocalizationProvider.DefaultDictionary="Translation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" xmlns:viewModels="clr-namespace:Loader.ViewModels" xmlns:cal="http://www.caliburnproject.org" xmlns:p="clr-namespace:Loader.Properties" xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop" xmlns:lex="http://wpflocalizeextension.codeplex.com">
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{Binding ProfileCollectionWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource GridLengthConverter}}" />
      <ColumnDefinition Width="5" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <Border Margin="10,10,10,0" Height="40" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="0.5" VerticalAlignment="Top" Grid.Column="2">
      <DockPanel>
        <TextBox DockPanel.Dock="Right" Width="180" Height="25" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,0,10,0" TextBoxHelper.Watermark="{Loc Profiles.Watermark.Search}" Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Label Margin="10,0,0,0" FontStyle="Italic" FontWeight="Medium" Opacity="0.6" VerticalAlignment="Center" Content="{Loc Profiles.Label.Filter}" />
        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
          <CheckBox Margin="0,0,10,0" VerticalAlignment="Center" Content="{Loc Profiles.Checkbox.Champion}" IsChecked="{Binding ChampionCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
          <CheckBox Margin="0,0,10,0" VerticalAlignment="Center" Content="{Loc Profiles.Checkbox.Utility}" IsChecked="{Binding UtilityCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
          <CheckBox Margin="0,0,10,0" VerticalAlignment="Center" Content="{Loc Profiles.Checkbox.Library}" IsChecked="{Binding LibraryCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
      </DockPanel>
    </Border>
    <Border Grid.Column="0">
      <Border.ContextMenu>
        <ContextMenu>
          <MenuItem Message.Attach="[Event Click] = [Action CreateProfile()]" Header="{Loc Profiles.Context.CreateProfile}">
            <MenuItem.Icon>
              <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                  <VisualBrush Visual="{StaticResource appbar_add}" />
                </Rectangle.Fill>
              </Rectangle>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Message.Attach="[Event Click] = [Action ImportProfile()]" Header="{Loc Profiles.Context.ImportProfile}">
            <MenuItem.Icon>
              <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                  <VisualBrush Visual="{StaticResource appbar_cabinet_in}" />
                </Rectangle.Fill>
              </Rectangle>
            </MenuItem.Icon>
          </MenuItem>
        </ContextMenu>
      </Border.ContextMenu>
      <DockPanel>
        <Label DockPanel.Dock="Top" Margin="10,5,0,0" FontStyle="Italic" FontWeight="Medium" Opacity="0.6" Content="{Loc Profiles.Label.Profiles}" />
        <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Hidden" DockPanel.Dock="Top">
          <ItemsControl x:ConnectionId="1" Name="Items" dragDrop:DragDrop.IsDragSource="True" dragDrop:DragDrop.IsDropTarget="True" dragDrop:DragDrop.DragHandler="{Binding}" dragDrop:DragDrop.DropHandler="{Binding}">
            <ItemsControl.ItemTemplate>
              <DataTemplate DataType="viewModels:ProfileViewModel">
                <Border Margin="5">
                  <Border.Style>
                    <Style TargetType="{x:Type Border}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                          <Setter Property="Border.Background" Value="{StaticResource AccentColorBrush}" />
                        </DataTrigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Border.Background" Value="{StaticResource AccentColorBrush3}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </Border.Style>
                  <DockPanel Margin="0,3">
                    <DockPanel.ContextMenu>
                      <ContextMenu>
                        <MenuItem Message.Attach="[Event Click] = [Action ShareProfile()]" Header="{Loc Profiles.Context.ShareProfile}">
                          <MenuItem.Icon>
                            <Rectangle Width="16" Height="16">
                              <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_share}" />
                              </Rectangle.Fill>
                            </Rectangle>
                          </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Message.Attach="[Event Click] = [Action DeleteProfile()]" Header="{Loc Profiles.Context.DeleteProfile}">
                          <MenuItem.Icon>
                            <Rectangle Width="16" Height="16">
                              <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_close}" />
                              </Rectangle.Fill>
                            </Rectangle>
                          </MenuItem.Icon>
                        </MenuItem>
                      </ContextMenu>
                    </DockPanel.ContextMenu>
                    <CheckBox DockPanel.Dock="Left" Margin="5,0,0,0" IsChecked="{Binding Inject, Mode=TwoWay}" />
                    <Button Margin="5,0" Message.Attach="[Event Click] = [Action ActivateItem($dataContext)]; [Event MouseDoubleClick] = [Action StartRenameProfile()]; [Key F2] = [Action StartRenameProfile()]; [Key Escape] = [Action StopRenameProfile()]; [Key Enter] = [Action StopRenameProfile()]" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                      <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                          <StackPanel>
                            <TextBlock Message.Attach="[Key Enter] = [Action StopRenameProfile()]; [Key Escape] = [Action StopRenameProfile()]" Text="{Binding DisplayName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                              <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                      <Setter Property="TextBlock.Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsActive}" Value="False">
                                      <Setter Property="TextBlock.Foreground" Value="{StaticResource LabelTextBrush}" />
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBlock.Style>
                            </TextBlock>
                            <TextBox Message.Attach="[Event LostFocus] = [Action StopRenameProfile()]; [Key Enter] = [Action StopRenameProfile()]; [Key Escape] = [Action StopRenameProfile()]" Text="{Binding DisplayName}" Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          </StackPanel>
                        </ControlTemplate>
                      </Button.Template>
                    </Button>
                  </DockPanel>
                </Border>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </ScrollViewer>
      </DockPanel>
    </Border>
    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
    <ContentControl x:ConnectionId="2" Name="ActiveItem" Grid.Column="2" Margin="0,50,0,0" />
  </Grid>
</UserControl>